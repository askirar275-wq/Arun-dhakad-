<!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Fruit Cut Game üçâüçäüçé</title>
  <style>
    *{margin:0;padding:0;box-sizing:border-box}
    body {
      background: linear-gradient(160deg,#0f2027,#203a43,#2c5364);
      overflow:hidden;
      font-family: Arial, sans-serif;
      color:#fff;
      text-align:center;
    }
    h1 {
      font-size:28px;
      padding:10px;
      background:rgba(0,0,0,0.4);
    }
    #score {
      position:absolute;
      top:10px;
      left:10px;
      font-size:20px;
      background:rgba(0,0,0,0.4);
      padding:5px 10px;
      border-radius:8px;
    }
    #gameCanvas {
      display:block;
      margin:0 auto;
      background:rgba(255,255,255,0.05);
    }
    #startBtn {
      position:absolute;
      bottom:30px;
      left:50%;
      transform:translateX(-50%);
      padding:12px 25px;
      font-size:20px;
      background:#ff5722;
      color:#fff;
      border:none;
      border-radius:30px;
      cursor:pointer;
      transition:0.3s;
    }
    #startBtn:hover { background:#e64a19; }
    #gameOver {
      display:none;
      position:absolute;
      top:50%;
      left:50%;
      transform:translate(-50%,-50%);
      background:rgba(0,0,0,0.8);
      padding:20px;
      border-radius:15px;
    }
    #gameOver h2 { margin-bottom:10px; }
    #restartBtn {
      padding:10px 20px;
      background:#4caf50;
      color:#fff;
      border:none;
      border-radius:20px;
      cursor:pointer;
    }
    #restartBtn:hover { background:#388e3c; }
  </style>
</head>
<body>
  <h1>üçâ Fruit Cut Game üçä</h1>
  <div id="score">‡§∏‡•ç‡§ï‡•ã‡§∞: 0</div>
  <canvas id="gameCanvas" width="400" height="600"></canvas>
  <button id="startBtn">‚ñ∂ ‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•ã</button>
  
  <div id="gameOver">
    <h2>‚ö† ‡§ó‡•á‡§Æ ‡§ñ‡§§‡•ç‡§Æ!</h2>
    <p id="finalScore"></p>
    <button id="restartBtn">üîÑ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ñ‡•á‡§≤‡•ã</button>
  </div>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    const scoreDisplay = document.getElementById("score");
    const startBtn = document.getElementById("startBtn");
    const gameOverScreen = document.getElementById("gameOver");
    const finalScore = document.getElementById("finalScore");
    const restartBtn = document.getElementById("restartBtn");

    let fruits = [];
    let score = 0;
    let gameRunning = false;

    const fruitEmoji = ["üçâ","üçä","üçé","üçå","üçì","ü•≠"];

    class Fruit {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = canvas.height + 20;
        this.speedY = -(Math.random()*7 + 12);
        this.speedX = (Math.random() - 0.5) * 6;
        this.emoji = fruitEmoji[Math.floor(Math.random()*fruitEmoji.length)];
        this.size = 40;
        this.cut = false;
      }
      update() {
        this.x += this.speedX;
        this.y += this.speedY;
        this.speedY += 0.5; 
      }
      draw() {
        ctx.font = this.size+"px Arial";
        ctx.fillText(this.emoji,this.x,this.y);
      }
    }

    function startGame() {
      fruits = [];
      score = 0;
      gameRunning = true;
      gameOverScreen.style.display = "none";
      startBtn.style.display = "none";
      animate();
      spawnFruit();
    }

    function endGame() {
      gameRunning = false;
      gameOverScreen.style.display = "block";
      finalScore.innerText = "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
    }

    function spawnFruit() {
      if (!gameRunning) return;
      fruits.push(new Fruit());
      setTimeout(spawnFruit, 800 + Math.random()*800);
    }

    function animate() {
      if (!gameRunning) return;
      ctx.clearRect(0,0,canvas.width,canvas.height);
      fruits.forEach((fruit,i)=>{
        fruit.update();
        fruit.draw();
        if(fruit.y > canvas.height+50 && !fruit.cut){
          endGame();
        }
      });
      requestAnimationFrame(animate);
    }

    canvas.addEventListener("click",cutFruit);
    canvas.addEventListener("touchstart",cutFruit);

    function cutFruit(e){
      if(!gameRunning) return;
      const rect = canvas.getBoundingClientRect();
      const x = (e.touches? e.touches[0].clientX:e.clientX) - rect.left;
      const y = (e.touches? e.touches[0].clientY:e.clientY) - rect.top;
      fruits.forEach((fruit)=>{
        if(!fruit.cut && x>fruit.x && x<fruit.x+fruit.size && y>fruit.y-fruit.size && y<fruit.y){
          fruit.cut=true;
          score++;
          scoreDisplay.innerText = "‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
        }
      });
      fruits = fruits.filter(f=>!f.cut);
    }

    startBtn.addEventListener("click", startGame);
    restartBtn.addEventListener("click", startGame);
  </script>
</body>
</html><!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Fruit Cut Game üçâüçäüçé</title>
  <style>
    *{margin:0;padding:0;box-sizing:border-box}
    body {
      background: linear-gradient(160deg,#0f2027,#203a43,#2c5364);
      overflow:hidden;
      font-family: Arial, sans-serif;
      color:#fff;
      text-align:center;
    }
    h1 {
      font-size:28px;
      padding:10px;
      background:rgba(0,0,0,0.4);
    }
    #score {
      position:absolute;
      top:10px;
      left:10px;
      font-size:20px;
      background:rgba(0,0,0,0.4);
      padding:5px 10px;
      border-radius:8px;
    }
    #gameCanvas {
      display:block;
      margin:0 auto;
      background:rgba(255,255,255,0.05);
    }
    #startBtn {
      position:absolute;
      bottom:30px;
      left:50%;
      transform:translateX(-50%);
      padding:12px 25px;
      font-size:20px;
      background:#ff5722;
      color:#fff;
      border:none;
      border-radius:30px;
      cursor:pointer;
      transition:0.3s;
    }
    #startBtn:hover { background:#e64a19; }
    #gameOver {
      display:none;
      position:absolute;
      top:50%;
      left:50%;
      transform:translate(-50%,-50%);
      background:rgba(0,0,0,0.8);
      padding:20px;
      border-radius:15px;
    }
    #gameOver h2 { margin-bottom:10px; }
    #restartBtn {
      padding:10px 20px;
      background:#4caf50;
      color:#fff;
      border:none;
      border-radius:20px;
      cursor:pointer;
    }
    #restartBtn:hover { background:#388e3c; }
  </style>
</head>
<body>
  <h1>üçâ Fruit Cut Game üçä</h1>
  <div id="score">‡§∏‡•ç‡§ï‡•ã‡§∞: 0</div>
  <canvas id="gameCanvas" width="400" height="600"></canvas>
  <button id="startBtn">‚ñ∂ ‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•ã</button>
  
  <div id="gameOver">
    <h2>‚ö† ‡§ó‡•á‡§Æ ‡§ñ‡§§‡•ç‡§Æ!</h2>
    <p id="finalScore"></p>
    <button id="restartBtn">üîÑ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ñ‡•á‡§≤‡•ã</button>
  </div>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    const scoreDisplay = document.getElementById("score");
    const startBtn = document.getElementById("startBtn");
    const gameOverScreen = document.getElementById("gameOver");
    const finalScore = document.getElementById("finalScore");
    const restartBtn = document.getElementById("restartBtn");

    let fruits = [];
    let score = 0;
    let gameRunning = false;

    const fruitEmoji = ["üçâ","üçä","üçé","üçå","üçì","ü•≠"];

    class Fruit {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = canvas.height + 20;
        this.speedY = -(Math.random()*7 + 12);
        this.speedX = (Math.random() - 0.5) * 6;
        this.emoji = fruitEmoji[Math.floor(Math.random()*fruitEmoji.length)];
        this.size = 40;
        this.cut = false;
      }
      update() {
        this.x += this.speedX;
        this.y += this.speedY;
        this.speedY += 0.5; 
      }
      draw() {
        ctx.font = this.size+"px Arial";
        ctx.fillText(this.emoji,this.x,this.y);
      }
    }

    function startGame() {
      fruits = [];
      score = 0;
      gameRunning = true;
      gameOverScreen.style.display = "none";
      startBtn.style.display = "none";
      animate();
      spawnFruit();
    }

    function endGame() {
      gameRunning = false;
      gameOverScreen.style.display = "block";
      finalScore.innerText = "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
    }

    function spawnFruit() {
      if (!gameRunning) return;
      fruits.push(new Fruit());
      setTimeout(spawnFruit, 800 + Math.random()*800);
    }

    function animate() {
      if (!gameRunning) return;
      ctx.clearRect(0,0,canvas.width,canvas.height);
      fruits.forEach((fruit,i)=>{
        fruit.update();
        fruit.draw();
        if(fruit.y > canvas.height+50 && !fruit.cut){
          endGame();
        }
      });
      requestAnimationFrame(animate);
    }

    canvas.addEventListener("click",cutFruit);
    canvas.addEventListener("touchstart",cutFruit);

    function cutFruit(e){
      if(!gameRunning) return;
      const rect = canvas.getBoundingClientRect();
      const x = (e.touches? e.touches[0].clientX:e.clientX) - rect.left;
      const y = (e.touches? e.touches[0].clientY:e.clientY) - rect.top;
      fruits.forEach((fruit)=>{
        if(!fruit.cut && x>fruit.x && x<fruit.x+fruit.size && y>fruit.y-fruit.size && y<fruit.y){
          fruit.cut=true;
          score++;
          scoreDisplay.innerText = "‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
        }
      });
      fruits = fruits.filter(f=>!f.cut);
    }

    startBtn.addEventListener("click", startGame);
    restartBtn.addEventListener("click", startGame);
  </script>
</body>
</html>
