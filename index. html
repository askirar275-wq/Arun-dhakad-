<!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>üçâ Fruit Cut Game üçå</title>
  <style>
    *{margin:0;padding:0;box-sizing:border-box}
    body {
      font-family: Arial, sans-serif;
      overflow:hidden;
      text-align:center;
      color:#fff;
      background: linear-gradient(120deg,#0f2027,#203a43,#2c5364);
      background-size: 400% 400%;
      animation: gradientBG 10s ease infinite;
    }
    @keyframes gradientBG {
      0%{background-position:0% 50%}
      50%{background-position:100% 50%}
      100%{background-position:0% 50%}
    }
    h1{padding:10px;font-size:26px;background:rgba(0,0,0,0.3)}
    #score,#lives,#highScore {
      position:absolute;
      top:10px;
      font-size:18px;
      padding:5px 10px;
      background:rgba(0,0,0,0.4);
      border-radius:8px;
    }
    #score{left:10px;}
    #lives{left:140px;}
    #highScore{right:10px;}
    #gameCanvas {
      display:block;
      margin:0 auto;
      background:rgba(255,255,255,0.05);
    }
    #startBtn {
      position:absolute;
      bottom:30px;
      left:50%;
      transform:translateX(-50%);
      padding:12px 25px;
      font-size:20px;
      background:#ff5722;
      color:#fff;
      border:none;
      border-radius:30px;
      cursor:pointer;
      transition:0.3s;
    }
    #startBtn:hover {background:#e64a19;}
    #gameOver {
      display:none;
      position:absolute;
      top:50%;left:50%;
      transform:translate(-50%,-50%);
      background:rgba(0,0,0,0.8);
      padding:20px;
      border-radius:15px;
    }
    #restartBtn {
      padding:10px 20px;
      background:#4caf50;
      color:#fff;
      border:none;
      border-radius:20px;
      cursor:pointer;
    }
    canvas.slowmotion {
      filter: blur(1px) brightness(1.2);
    }
  </style>
</head>
<body>
  <h1>üçâ Fruit Cut Game üçå</h1>
  <div id="score">‡§∏‡•ç‡§ï‡•ã‡§∞: 0</div>
  <div id="lives">‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è</div>
  <div id="highScore">üèÜ High: 0</div>
  <canvas id="gameCanvas" width="400" height="600"></canvas>
  <button id="startBtn">‚ñ∂ ‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•ã</button>
  <div id="gameOver">
    <h2>‚ö† ‡§ó‡•á‡§Æ ‡§ñ‡§§‡•ç‡§Æ!</h2>
    <p id="finalScore"></p>
    <button id="restartBtn">üîÑ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ñ‡•á‡§≤‡•ã</button>
  </div>

  <script>
    const canvas=document.getElementById("gameCanvas");
    const ctx=canvas.getContext("2d");
    const scoreDisplay=document.getElementById("score");
    const livesDisplay=document.getElementById("lives");
    const highScoreDisplay=document.getElementById("highScore");
    const startBtn=document.getElementById("startBtn");
    const gameOverScreen=document.getElementById("gameOver");
    const finalScore=document.getElementById("finalScore");
    const restartBtn=document.getElementById("restartBtn");

    let fruits=[],slices=[],score=0,lives=3,gameRunning=false,slowMotion=false;
    let highScore=localStorage.getItem("fruitHighScore")||0;
    highScoreDisplay.innerText="üèÜ High: "+highScore;

    const fruitEmoji=["üçâ","üçé","üçå","üçì","ü•≠"];
    const bombEmoji="üí£";
    const coinEmoji="ü™ô";
    const powerEmoji="‚ö°";

    class Fruit{
      constructor(type="fruit"){
        this.x=Math.random()*canvas.width;
        this.y=canvas.height+20;
        this.speedY=-(Math.random()*7+10);
        this.speedX=(Math.random()-0.5)*6;
        this.size=40;
        this.cut=false;
        this.type=type;
        if(type==="fruit"){
          this.emoji=fruitEmoji[Math.floor(Math.random()*fruitEmoji.length)];
        }else if(type==="bomb"){this.emoji=bombEmoji;}
        else if(type==="coin"){this.emoji=coinEmoji;}
        else if(type==="power"){this.emoji=powerEmoji;}
      }
      update(){
        this.x+=this.speedX;
        this.y+=this.speedY;
        this.speedY+=slowMotion?0.1:0.4;
      }
      draw(){
        ctx.font=this.size+"px Arial";
        ctx.fillText(this.emoji,this.x,this.y);
      }
    }

    function drawSlices(){
      slices.forEach((s,i)=>{
        ctx.strokeStyle=s.color;
        ctx.lineWidth=3;
        ctx.globalAlpha=s.alpha;
        ctx.beginPath();
        ctx.moveTo(s.x1,s.y1);
        ctx.lineTo(s.x2,s.y2);
        ctx.stroke();
        ctx.globalAlpha=1;
        s.alpha-=0.05;
      });
      slices=slices.filter(s=>s.alpha>0);
    }

    function startGame(){
      fruits=[];slices=[];
      score=0;lives=3;
      gameRunning=true;slowMotion=false;
      canvas.classList.remove("slowmotion");
      gameOverScreen.style.display="none";
      startBtn.style.display="none";
      updateUI();
      animate();
      spawnFruit();
    }

    function endGame(){
      gameRunning=false;
      gameOverScreen.style.display="block";
      finalScore.innerText="‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
      if(score>highScore){
        highScore=score;
        localStorage.setItem("fruitHighScore",highScore);
      }
      highScoreDisplay.innerText="üèÜ High: "+highScore;
    }

    function updateUI(){
      scoreDisplay.innerText="‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
      livesDisplay.innerText="‚ù§Ô∏è".repeat(lives);
    }

    function spawnFruit(){
      if(!gameRunning)return;
      let r=Math.random();
      if(r<0.1){fruits.push(new Fruit("bomb"));}
      else if(r<0.15){fruits.push(new Fruit("coin"));}
      else if(r<0.2){fruits.push(new Fruit("power"));}
      else{fruits.push(new Fruit("fruit"));}
      setTimeout(spawnFruit,700+Math.random()*800);
    }

    function animate(){
      if(!gameRunning)return;
      ctx.clearRect(0,0,canvas.width,canvas.height);
      fruits.forEach(f=>{f.update();f.draw();});
      drawSlices();
      fruits.forEach((f,i)=>{
        if(f.y>canvas.height+50&&!f.cut&&f.type==="fruit"){
          lives--;
          updateUI();
          if(lives<=0)endGame();
        }
      });
      fruits=fruits.filter(f=>!f.cut&&f.y<canvas.height+60);
      requestAnimationFrame(animate);
    }

    function cutFruit(e){
      if(!gameRunning)return;
      const rect=canvas.getBoundingClientRect();
      const x=(e.touches?e.touches[0].clientX:e.clientX)-rect.left;
      const y=(e.touches?e.touches[0].clientY:e.clientY)-rect.top;
      let cutCount=0;
      fruits.forEach(f=>{
        if(!f.cut&&x>f.x&&x<f.x+f.size&&y>f.y-f.size&&y<f.y){
          f.cut=true;cutCount++;
          let color="white";
          if(f.type==="fruit"){score++;color="red";}
          if(f.type==="bomb"){lives--;color="orange";if(lives<=0)endGame();}
          if(f.type==="coin"){activateSlowMotion();color="gold";}
          if(f.type==="power"){cutAllFruits();color="cyan";}
          updateUI();
          slices.push({x1:f.x,y1:f.y,x2:x+20,y2:y+20,color,alpha:1});
        }
      });
      if(cutCount>=2){score+=cutCount;updateUI();}
      fruits=fruits.filter(f=>!f.cut);
    }

    function cutAllFruits(){
      fruits.forEach(f=>{if(f.type==="fruit"){f.cut=true;score++;}});
    }

    function activateSlowMotion(){
      slowMotion=true;
      canvas.classList.add("slowmotion");
      setTimeout(()=>{
        slowMotion=false;
        canvas.classList.remove("slowmotion");
      },5000);
    }

    canvas.addEventListener("click",cutFruit);
    canvas.addEventListener("touchstart",cutFruit);
    startBtn.addEventListener("click",startGame);
    restartBtn.addEventListener("click",startGame);
  </script>
</body>
</html><!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>üçâ Fruit Cut Game üçå</title>
  <style>
    *{margin:0;padding:0;box-sizing:border-box}
    body {
      font-family: Arial, sans-serif;
      overflow:hidden;
      text-align:center;
      color:#fff;
      background: linear-gradient(120deg,#0f2027,#203a43,#2c5364);
      background-size: 400% 400%;
      animation: gradientBG 10s ease infinite;
    }
    @keyframes gradientBG {
      0%{background-position:0% 50%}
      50%{background-position:100% 50%}
      100%{background-position:0% 50%}
    }
    h1{padding:10px;font-size:26px;background:rgba(0,0,0,0.3)}
    #score,#lives,#highScore {
      position:absolute;
      top:10px;
      font-size:18px;
      padding:5px 10px;
      background:rgba(0,0,0,0.4);
      border-radius:8px;
    }
    #score{left:10px;}
    #lives{left:140px;}
    #highScore{right:10px;}
    #gameCanvas {
      display:block;
      margin:0 auto;
      background:rgba(255,255,255,0.05);
    }
    #startBtn {
      position:absolute;
      bottom:30px;
      left:50%;
      transform:translateX(-50%);
      padding:12px 25px;
      font-size:20px;
      background:#ff5722;
      color:#fff;
      border:none;
      border-radius:30px;
      cursor:pointer;
      transition:0.3s;
    }
    #startBtn:hover {background:#e64a19;}
    #gameOver {
      display:none;
      position:absolute;
      top:50%;left:50%;
      transform:translate(-50%,-50%);
      background:rgba(0,0,0,0.8);
      padding:20px;
      border-radius:15px;
    }
    #restartBtn {
      padding:10px 20px;
      background:#4caf50;
      color:#fff;
      border:none;
      border-radius:20px;
      cursor:pointer;
    }
    canvas.slowmotion {
      filter: blur(1px) brightness(1.2);
    }
  </style>
</head>
<body>
  <h1>üçâ Fruit Cut Game üçå</h1>
  <div id="score">‡§∏‡•ç‡§ï‡•ã‡§∞: 0</div>
  <div id="lives">‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è</div>
  <div id="highScore">üèÜ High: 0</div>
  <canvas id="gameCanvas" width="400" height="600"></canvas>
  <button id="startBtn">‚ñ∂ ‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•ã</button>
  <div id="gameOver">
    <h2>‚ö† ‡§ó‡•á‡§Æ ‡§ñ‡§§‡•ç‡§Æ!</h2>
    <p id="finalScore"></p>
    <button id="restartBtn">üîÑ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ñ‡•á‡§≤‡•ã</button>
  </div>

  <script>
    const canvas=document.getElementById("gameCanvas");
    const ctx=canvas.getContext("2d");
    const scoreDisplay=document.getElementById("score");
    const livesDisplay=document.getElementById("lives");
    const highScoreDisplay=document.getElementById("highScore");
    const startBtn=document.getElementById("startBtn");
    const gameOverScreen=document.getElementById("gameOver");
    const finalScore=document.getElementById("finalScore");
    const restartBtn=document.getElementById("restartBtn");

    let fruits=[],slices=[],score=0,lives=3,gameRunning=false,slowMotion=false;
    let highScore=localStorage.getItem("fruitHighScore")||0;
    highScoreDisplay.innerText="üèÜ High: "+highScore;

    const fruitEmoji=["üçâ","üçé","üçå","üçì","ü•≠"];
    const bombEmoji="üí£";
    const coinEmoji="ü™ô";
    const powerEmoji="‚ö°";

    class Fruit{
      constructor(type="fruit"){
        this.x=Math.random()*canvas.width;
        this.y=canvas.height+20;
        this.speedY=-(Math.random()*7+10);
        this.speedX=(Math.random()-0.5)*6;
        this.size=40;
        this.cut=false;
        this.type=type;
        if(type==="fruit"){
          this.emoji=fruitEmoji[Math.floor(Math.random()*fruitEmoji.length)];
        }else if(type==="bomb"){this.emoji=bombEmoji;}
        else if(type==="coin"){this.emoji=coinEmoji;}
        else if(type==="power"){this.emoji=powerEmoji;}
      }
      update(){
        this.x+=this.speedX;
        this.y+=this.speedY;
        this.speedY+=slowMotion?0.1:0.4;
      }
      draw(){
        ctx.font=this.size+"px Arial";
        ctx.fillText(this.emoji,this.x,this.y);
      }
    }

    function drawSlices(){
      slices.forEach((s,i)=>{
        ctx.strokeStyle=s.color;
        ctx.lineWidth=3;
        ctx.globalAlpha=s.alpha;
        ctx.beginPath();
        ctx.moveTo(s.x1,s.y1);
        ctx.lineTo(s.x2,s.y2);
        ctx.stroke();
        ctx.globalAlpha=1;
        s.alpha-=0.05;
      });
      slices=slices.filter(s=>s.alpha>0);
    }

    function startGame(){
      fruits=[];slices=[];
      score=0;lives=3;
      gameRunning=true;slowMotion=false;
      canvas.classList.remove("slowmotion");
      gameOverScreen.style.display="none";
      startBtn.style.display="none";
      updateUI();
      animate();
      spawnFruit();
    }

    function endGame(){
      gameRunning=false;
      gameOverScreen.style.display="block";
      finalScore.innerText="‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
      if(score>highScore){
        highScore=score;
        localStorage.setItem("fruitHighScore",highScore);
      }
      highScoreDisplay.innerText="üèÜ High: "+highScore;
    }

    function updateUI(){
      scoreDisplay.innerText="‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
      livesDisplay.innerText="‚ù§Ô∏è".repeat(lives);
    }

    function spawnFruit(){
      if(!gameRunning)return;
      let r=Math.random();
      if(r<0.1){fruits.push(new Fruit("bomb"));}
      else if(r<0.15){fruits.push(new Fruit("coin"));}
      else if(r<0.2){fruits.push(new Fruit("power"));}
      else{fruits.push(new Fruit("fruit"));}
      setTimeout(spawnFruit,700+Math.random()*800);
    }

    function animate(){
      if(!gameRunning)return;
      ctx.clearRect(0,0,canvas.width,canvas.height);
      fruits.forEach(f=>{f.update();f.draw();});
      drawSlices();
      fruits.forEach((f,i)=>{
        if(f.y>canvas.height+50&&!f.cut&&f.type==="fruit"){
          lives--;
          updateUI();
          if(lives<=0)endGame();
        }
      });
      fruits=fruits.filter(f=>!f.cut&&f.y<canvas.height+60);
      requestAnimationFrame(animate);
    }

    function cutFruit(e){
      if(!gameRunning)return;
      const rect=canvas.getBoundingClientRect();
      const x=(e.touches?e.touches[0].clientX:e.clientX)-rect.left;
      const y=(e.touches?e.touches[0].clientY:e.clientY)-rect.top;
      let cutCount=0;
      fruits.forEach(f=>{
        if(!f.cut&&x>f.x&&x<f.x+f.size&&y>f.y-f.size&&y<f.y){
          f.cut=true;cutCount++;
          let color="white";
          if(f.type==="fruit"){score++;color="red";}
          if(f.type==="bomb"){lives--;color="orange";if(lives<=0)endGame();}
          if(f.type==="coin"){activateSlowMotion();color="gold";}
          if(f.type==="power"){cutAllFruits();color="cyan";}
          updateUI();
          slices.push({x1:f.x,y1:f.y,x2:x+20,y2:y+20,color,alpha:1});
        }
      });
      if(cutCount>=2){score+=cutCount;updateUI();}
      fruits=fruits.filter(f=>!f.cut);
    }

    function cutAllFruits(){
      fruits.forEach(f=>{if(f.type==="fruit"){f.cut=true;score++;}});
    }

    function activateSlowMotion(){
      slowMotion=true;
      canvas.classList.add("slowmotion");
      setTimeout(()=>{
        slowMotion=false;
        canvas.classList.remove("slowmotion");
      },5000);
    }

    canvas.addEventListener("click",cutFruit);
    canvas.addEventListener("touchstart",cutFruit);
    startBtn.addEventListener("click",startGame);
    restartBtn.addEventListener("click",startGame);
  </script>
</body>
</html>
