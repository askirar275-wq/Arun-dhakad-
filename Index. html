<!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Fruit Cut Game üçâüçäüçé</title>
  <style>
    * {margin:0; padding:0; box-sizing:border-box;}
    body {
      background: linear-gradient(135deg,#0f2027,#203a43,#2c5364);
      overflow: hidden;
      font-family: Arial, sans-serif;
      color: #fff;
      touch-action: none;
    }
    h1 {
      text-align:center;
      padding: 10px;
      font-size: 28px;
      background: rgba(0,0,0,0.4);
    }
    #score {
      position: absolute;
      top: 15px;
      left: 15px;
      font-size: 22px;
      background: rgba(0,0,0,0.4);
      padding: 5px 12px;
      border-radius: 10px;
    }
    canvas {
      display:block;
      width:100vw;
      height:100vh;
    }
    button {
      position: absolute;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background: #ff5722;
      color: white;
      border: none;
      padding: 12px 25px;
      font-size: 18px;
      border-radius: 50px;
      cursor: pointer;
      outline: 2px solid white;
      transition: 0.2s;
    }
    button:active {
      transform: translateX(-50%) scale(0.9);
      background: #ff784e;
    }
    #gameOver {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%,-50%);
      font-size: 40px;
      color: #ff3d3d;
      display: none;
      background: rgba(0,0,0,0.6);
      padding: 20px 40px;
      border-radius: 20px;
      text-align: center;
    }
  </style>
</head>
<body>
  <h1>Fruit Cut Game üçâ</h1>
  <div id="score">‡§∏‡•ç‡§ï‡•ã‡§∞: 0</div>
  <canvas id="gameCanvas"></canvas>
  <button id="startBtn">‚ñ∂ ‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•ã</button>
  <div id="gameOver">‚ùå ‡§ó‡•á‡§Æ ‡§ì‡§µ‡§∞ ‚ùå<br><br><button onclick="restartGame()">üîÑ ‡§¶‡•Å‡§¨‡§æ‡§∞‡§æ ‡§ñ‡•á‡§≤‡•ã</button></div>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    let fruits = [];
    let score = 0;
    let gameRunning = false;

    const fruitImages = ["üçé","üçå","üçâ","üçä","üçì","ü•≠"];
    const bomb = "üí£";

    class Fruit {
      constructor(){
        this.x = Math.random() * canvas.width;
        this.y = canvas.height + 50;
        this.size = 60;
        // 20% chance bomb, 80% fruit
        if(Math.random() < 0.2){
          this.emoji = bomb;
          this.isBomb = true;
        } else {
          this.emoji = fruitImages[Math.floor(Math.random()*fruitImages.length)];
          this.isBomb = false;
        }
        this.speedY = -(8 + Math.random()*5);
        this.speedX = (Math.random() - 0.5) * 6;
      }
      update(){
        this.x += this.speedX;
        this.y += this.speedY;
        this.speedY += 0.3; // gravity
      }
      draw(){
        ctx.font = this.size+"px Arial";
        ctx.fillText(this.emoji, this.x, this.y);
      }
    }

    function spawnFruit(){
      if(gameRunning){
        fruits.push(new Fruit());
        setTimeout(spawnFruit, 1000);
      }
    }

    function gameLoop(){
      if(!gameRunning) return;
      ctx.clearRect(0,0,canvas.width,canvas.height);
      fruits.forEach((fruit,index)=>{
        fruit.update();
        fruit.draw();
        if(fruit.y > canvas.height+50){
          fruits.splice(index,1);
        }
      });
      requestAnimationFrame(gameLoop);
    }

    function checkSlice(x,y){
      fruits.forEach((fruit,index)=>{
        let dx = x - fruit.x;
        let dy = y - fruit.y;
        let distance = Math.sqrt(dx*dx+dy*dy);
        if(distance < fruit.size){
          if(fruit.isBomb){
            endGame(); // bomb ‡§ï‡§ü ‡§ó‡§Ø‡§æ
          } else {
            score++;
            document.getElementById("score").innerText = "‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
          }
          fruits.splice(index,1);
        }
      });
    }

    function endGame(){
      gameRunning = false;
      document.getElementById("gameOver").style.display = "block";
    }

    function restartGame(){
      score = 0;
      fruits = [];
      document.getElementById("score").innerText = "‡§∏‡•ç‡§ï‡•ã‡§∞: 0";
      document.getElementById("gameOver").style.display = "none";
      gameRunning = true;
      spawnFruit();
      gameLoop();
    }

    // Mouse & Touch
    canvas.addEventListener("mousemove", e=>{
      if(gameRunning) checkSlice(e.clientX, e.clientY);
    });
    canvas.addEventListener("touchmove", e=>{
      if(gameRunning){
        let touch = e.touches[0];
        checkSlice(touch.clientX, touch.clientY);
      }
    });

    document.getElementById("startBtn").addEventListener("click",()=>{
      score = 0;
      fruits = [];
      document.getElementById("score").innerText = "‡§∏‡•ç‡§ï‡•ã‡§∞: 0";
      gameRunning = true;
      spawnFruit();
      gameLoop();
    });
  </script>
</body>
</html><!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Fruit Cut Game üçâüçäüçé</title>
  <style>
    * {margin:0; padding:0; box-sizing:border-box;}
    body {
      background: linear-gradient(135deg,#0f2027,#203a43,#2c5364);
      overflow: hidden;
      font-family: Arial, sans-serif;
      color: #fff;
      touch-action: none;
    }
    h1 {
      text-align:center;
      padding: 10px;
      font-size: 28px;
      background: rgba(0,0,0,0.4);
    }
    #score {
      position: absolute;
      top: 15px;
      left: 15px;
      font-size: 22px;
      background: rgba(0,0,0,0.4);
      padding: 5px 12px;
      border-radius: 10px;
    }
    canvas {
      display:block;
      width:100vw;
      height:100vh;
    }
    button {
      position: absolute;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background: #ff5722;
      color: white;
      border: none;
      padding: 12px 25px;
      font-size: 18px;
      border-radius: 50px;
      cursor: pointer;
      outline: 2px solid white;
      transition: 0.2s;
    }
    button:active {
      transform: translateX(-50%) scale(0.9);
      background: #ff784e;
    }
    #gameOver {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%,-50%);
      font-size: 40px;
      color: #ff3d3d;
      display: none;
      background: rgba(0,0,0,0.6);
      padding: 20px 40px;
      border-radius: 20px;
      text-align: center;
    }
  </style>
</head>
<body>
  <h1>Fruit Cut Game üçâ</h1>
  <div id="score">‡§∏‡•ç‡§ï‡•ã‡§∞: 0</div>
  <canvas id="gameCanvas"></canvas>
  <button id="startBtn">‚ñ∂ ‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•ã</button>
  <div id="gameOver">‚ùå ‡§ó‡•á‡§Æ ‡§ì‡§µ‡§∞ ‚ùå<br><br><button onclick="restartGame()">üîÑ ‡§¶‡•Å‡§¨‡§æ‡§∞‡§æ ‡§ñ‡•á‡§≤‡•ã</button></div>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    let fruits = [];
    let score = 0;
    let gameRunning = false;

    const fruitImages = ["üçé","üçå","üçâ","üçä","üçì","ü•≠"];
    const bomb = "üí£";

    class Fruit {
      constructor(){
        this.x = Math.random() * canvas.width;
        this.y = canvas.height + 50;
        this.size = 60;
        // 20% chance bomb, 80% fruit
        if(Math.random() < 0.2){
          this.emoji = bomb;
          this.isBomb = true;
        } else {
          this.emoji = fruitImages[Math.floor(Math.random()*fruitImages.length)];
          this.isBomb = false;
        }
        this.speedY = -(8 + Math.random()*5);
        this.speedX = (Math.random() - 0.5) * 6;
      }
      update(){
        this.x += this.speedX;
        this.y += this.speedY;
        this.speedY += 0.3; // gravity
      }
      draw(){
        ctx.font = this.size+"px Arial";
        ctx.fillText(this.emoji, this.x, this.y);
      }
    }

    function spawnFruit(){
      if(gameRunning){
        fruits.push(new Fruit());
        setTimeout(spawnFruit, 1000);
      }
    }

    function gameLoop(){
      if(!gameRunning) return;
      ctx.clearRect(0,0,canvas.width,canvas.height);
      fruits.forEach((fruit,index)=>{
        fruit.update();
        fruit.draw();
        if(fruit.y > canvas.height+50){
          fruits.splice(index,1);
        }
      });
      requestAnimationFrame(gameLoop);
    }

    function checkSlice(x,y){
      fruits.forEach((fruit,index)=>{
        let dx = x - fruit.x;
        let dy = y - fruit.y;
        let distance = Math.sqrt(dx*dx+dy*dy);
        if(distance < fruit.size){
          if(fruit.isBomb){
            endGame(); // bomb ‡§ï‡§ü ‡§ó‡§Ø‡§æ
          } else {
            score++;
            document.getElementById("score").innerText = "‡§∏‡•ç‡§ï‡•ã‡§∞: "+score;
          }
          fruits.splice(index,1);
        }
      });
    }

    function endGame(){
      gameRunning = false;
      document.getElementById("gameOver").style.display = "block";
    }

    function restartGame(){
      score = 0;
      fruits = [];
      document.getElementById("score").innerText = "‡§∏‡•ç‡§ï‡•ã‡§∞: 0";
      document.getElementById("gameOver").style.display = "none";
      gameRunning = true;
      spawnFruit();
      gameLoop();
    }

    // Mouse & Touch
    canvas.addEventListener("mousemove", e=>{
      if(gameRunning) checkSlice(e.clientX, e.clientY);
    });
    canvas.addEventListener("touchmove", e=>{
      if(gameRunning){
        let touch = e.touches[0];
        checkSlice(touch.clientX, touch.clientY);
      }
    });

    document.getElementById("startBtn").addEventListener("click",()=>{
      score = 0;
      fruits = [];
      document.getElementById("score").innerText = "‡§∏‡•ç‡§ï‡•ã‡§∞: 0";
      gameRunning = true;
      spawnFruit();
      gameLoop();
    });
  </script>
</body>
</html>
